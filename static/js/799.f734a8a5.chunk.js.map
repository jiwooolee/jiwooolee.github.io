{"version":3,"file":"static/js/799.f734a8a5.chunk.js","mappings":"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","sources":["Component/Button/BasicButton.js","Component/Steps/Step.js","Component/Trasfer/Transfers.js","Component/InputNumber/Number.js","Component/List/SetPlayers.js","Component/Input/Name.js","Page/TeamSettingPage.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Button } from \"antd\";\r\n\r\nconst BasicButton = ({ type, shape, icon, text, size, disabled, onClick }) => {\r\n\r\n    return (\r\n        <Button type={type} shape={shape} icon={icon} size={size} disabled={disabled} onClick={onClick}>\r\n            {text}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default BasicButton;","import React from 'react';\r\n\r\nimport { Steps } from \"antd\";\r\n\r\nconst Step = ({ items, current, setCurrent }) => {\r\n    const onChange = (value) => {\r\n        setCurrent(value);\r\n    };\r\n\r\n    return (\r\n        <Steps size='small' direction='horizontal' items={items} current={current} onChange={onChange}/>\r\n    );\r\n};\r\n\r\nexport default Step;","import React, { useState } from 'react';\r\n\r\nimport { Transfer } from 'antd';\r\n\r\nconst Transfers = ({ initialTeamList, setTeamList, teamList }) => {\r\n    const [targetKeys, setTargetKeys] = useState([...teamList.map(v => v.key)]);\r\n    const [selectedKeys, setSelectedKeys] = useState([]);\r\n\r\n    const onChange = (nextTargetKeys) => {\r\n        setTargetKeys(nextTargetKeys);\r\n        setTeamList(initialTeamList.filter(v => nextTargetKeys.includes(v.key)));\r\n    };\r\n\r\n    const onSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n        setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\r\n    };\r\n\r\n    return (\r\n        <Transfer dataSource={initialTeamList}\r\n                  titles={['대기', '등록']}\r\n                  targetKeys={targetKeys}\r\n                  selectedKeys={selectedKeys}\r\n                  render={(item) => item.team}\r\n                  onSelectChange={onSelectChange}\r\n                  onChange={onChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Transfers;","import React from 'react';\r\n\r\nimport { InputNumber } from \"antd\";\r\n\r\nconst Number = ({ min , max, onChange, value, addonAfter }) => {\r\n\r\n    return (\r\n        <InputNumber min={min} max={max} onChange={onChange} defaultValue={4}\r\n                     value={value} addonAfter={addonAfter}/>\r\n    );\r\n};\r\n\r\nexport default Number","import React, {useEffect, useState} from 'react';\r\n\r\nimport { List } from \"antd\";\r\n\r\nconst SetPlayers = ({ header, whitePlayerList, blackPlayerList, greenPlayerList }) => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        header === 'White' ?\r\n            setData(whitePlayerList) :\r\n            header === 'Black' ?\r\n                setData(blackPlayerList) : setData(greenPlayerList);\r\n    }, [blackPlayerList, greenPlayerList, header, whitePlayerList]);\r\n\r\n    return (\r\n        <List header={header} dataSource={data} size='small'\r\n              renderItem={(item) => (\r\n                  <List.Item key={item.key}>\r\n                      {item.name}\r\n                  </List.Item>\r\n              )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SetPlayers;","import React from 'react';\r\n\r\nimport { Input } from 'antd';\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst Name = ({ type, setWhitePlayer, setBlackPlayer, setGreenPlayer }) => {\r\n\r\n    const onChangePlayer = (e) => {\r\n        type === 'white' ?\r\n            setWhitePlayer({key: e.target.value, name: e.target.value,\r\n                'FG%': 0, '2PA': 0, '2FA': 0, '2P%': 0, '3PA': 0, '3FA': 0, '3P%': 0, 'PTS': 0,\r\n                'TR': 0, 'OR': 0, 'DR': 0, 'AST': 0, 'STL': 0, 'BLK': 0, 'TOV': 0, 'PF': 0,\r\n            }) :\r\n            type === 'black' ?\r\n                setBlackPlayer({key: e.target.value, name: e.target.value,\r\n                    'FG%': 0, '2PA': 0, '2FA': 0, '2P%': 0, '3PA': 0, '3FA': 0, '3P%': 0, 'PTS': 0,\r\n                    'TR': 0, 'OR': 0, 'DR': 0, 'AST': 0, 'STL': 0, 'BLK': 0, 'TOV': 0, 'PF': 0,}) :\r\n                setGreenPlayer({key: e.target.value, name: e.target.value,\r\n                    'FG%': 0, '2PA': 0, '2FA': 0, '2P%': 0, '3PA': 0, '3FA': 0, '3P%': 0, 'PTS': 0,\r\n                    'TR': 0, 'OR': 0, 'DR': 0, 'AST': 0, 'STL': 0, 'BLK': 0, 'TOV': 0, 'PF': 0,});\r\n    };\r\n\r\n    return (\r\n        <Input size='small'\r\n               placeholder='이름 입력' prefix={<UserOutlined />} onChange={onChangePlayer} allowClear/>\r\n    );\r\n};\r\n\r\nexport default Name;","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Row, Col, Space } from \"antd\";\r\nimport { OrderedListOutlined, TeamOutlined, UserOutlined, RightOutlined, LeftOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport Step from \"../Component/Steps/Step\";\r\nimport BasicButton from \"../Component/Button/BasicButton\";\r\nimport Transfers from \"../Component/Trasfer/Transfers\";\r\nimport Number from \"../Component/InputNumber/Number\";\r\nimport SetPlayers from \"../Component/List/SetPlayers\";\r\nimport Name from \"../Component/Input/Name\";\r\n\r\nconst TeamSettingPage = () => {\r\n    const navigate = useNavigate();\r\n    const [current, setCurrent] = useState(0);\r\n    const [teamStatus, setTeamStatus] = useState('wait');\r\n    const [quarterStatus, setQuarterStatus] = useState('wait');\r\n    const [playerStatus, setPlayerStatus] = useState('wait');\r\n    const [initialTeamList, setInitialTeamList] = useState([]);\r\n    const [teamList, setTeamList] = useState([]);\r\n    const [quarter, setQuarter] = useState(4);\r\n    const [whitePlayer, setWhitePlayer] = useState({});\r\n    const [blackPlayer, setBlackPlayer] = useState({});\r\n    const [greenPlayer, setGreenPlayer] = useState({});\r\n    const [whitePlayerList, setWhitePlayerList] = useState([]);\r\n    const [blackPlayerList, setBlackPlayerList] = useState([]);\r\n    const [greenPlayerList, setGreenPlayerList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setInitialTeamList([\r\n            { key: 'white', team: 'White', players: whitePlayerList },\r\n            { key: 'black', team: 'Black', players: blackPlayerList },\r\n            { key: 'green', team: 'Green', players: greenPlayerList }\r\n        ]);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const items = [\r\n        {title: '팀 설정', status: teamStatus, icon: <TeamOutlined/>,},\r\n        {title: '쿼터 설정', status: quarterStatus, icon: <OrderedListOutlined/>,},\r\n        {title: '선수 설정', status: playerStatus, icon: <UserOutlined/>,}\r\n    ];\r\n\r\n    const onClickSteps = (type) => {\r\n        type === 'next' ? setCurrent(current + 1) : setCurrent(current - 1);\r\n    };\r\n\r\n    const onClickTeamSave = () => {\r\n        setTeamStatus('finish');\r\n        setCurrent(current + 1);\r\n    };\r\n\r\n    const onClickQuarterSave = () => {\r\n        setQuarterStatus('finish');\r\n        setCurrent(current + 1);\r\n    };\r\n\r\n    const onChangeQuarter = (value) => {\r\n        setQuarter(value);\r\n    };\r\n\r\n    const onClickAddPlayer = (type) => {\r\n        type === 'white' ? setWhitePlayerList([whitePlayer, ...whitePlayerList]) :\r\n            type === 'black' ? setBlackPlayerList([blackPlayer, ...blackPlayerList]) :\r\n                setGreenPlayerList([greenPlayer, ...greenPlayerList]);\r\n    };\r\n\r\n    const onClickPlayerSave = () => {\r\n        setPlayerStatus('finish');\r\n    };\r\n\r\n    const onClickNextButton = () => {\r\n        // eslint-disable-next-line array-callback-return\r\n        window.localStorage.setItem('teamList', JSON.stringify([...teamList.map(v => {\r\n            if(v.key === 'white')\r\n                return {...v, players: whitePlayerList};\r\n            else if(v.key === 'black')\r\n                return {...v, players: blackPlayerList};\r\n            else\r\n                return {...v, players: greenPlayerList};\r\n        })]));\r\n        navigate('/game');\r\n    };\r\n\r\n    return (\r\n        <Row gutter={[16, 16]} justify='center'>\r\n            <Col span={24}>\r\n                <Step current={current} setCurrent={setCurrent} items={items}/>\r\n            </Col>\r\n            <Col span={12}>\r\n                <div style={{textAlign: 'right'}}>\r\n                    <BasicButton size='small' icon={<LeftOutlined/>} disabled={current === 0} onClick={() => onClickSteps('prev')}/>\r\n                </div>\r\n            </Col>\r\n            <Col span={12}>\r\n                <div style={{textAlign: 'left'}}>\r\n                    <BasicButton size='small' icon={<RightOutlined/>} disabled={current === 2} onClick={() => onClickSteps('next')}/>\r\n                </div>\r\n            </Col>\r\n            <Col span={24}>\r\n\r\n            </Col>\r\n            {current === 0 ?\r\n                <Row gutter={[8, 8]} justify='center'>\r\n                    <Col span={24}>\r\n                        <div style={{textAlign: 'center'}}>\r\n                            <Transfers initialTeamList={initialTeamList} setTeamList={setTeamList} teamList={teamList}/>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <div style={{textAlign: 'center'}}>\r\n                            <BasicButton disabled={teamList.length < 2} text='팀 저장' onClick={onClickTeamSave}/>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                :\r\n                current === 1 ?\r\n                    <Row gutter={[8, 8]} justify='center'>\r\n                        <Col span={12}>\r\n                            <Number min={1} max={10} value={quarter} onChange={onChangeQuarter} addonAfter='쿼터'/>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <div style={{textAlign: 'center'}}>\r\n                                <BasicButton text='쿼터 저장' disabled={teamStatus === 'wait'} onClick={onClickQuarterSave}/>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    :\r\n                    current === 2 ?\r\n                        <Row gutter={[8, 8]}>\r\n                            {teamList.map(v => (\r\n                                <Col offset={1} span={7} key={v.team}>\r\n                                    <SetPlayers header={v.team} whitePlayerList={whitePlayerList} blackPlayerList={blackPlayerList} greenPlayerList={greenPlayerList} />\r\n                                </Col>\r\n                            ))}\r\n                            {teamList.map(v => (\r\n                                <Col span={8} key={v.team}>\r\n                                    <Space.Compact>\r\n                                        <Name type={v.key} setWhitePlayer={setWhitePlayer} setBlackPlayer={setBlackPlayer} setGreenPlayer={setGreenPlayer} />\r\n                                        <BasicButton icon={<PlusOutlined/>} size='small' onClick={() => onClickAddPlayer(v.key)}/>\r\n                                    </Space.Compact>\r\n                                </Col>\r\n                            ))}\r\n                            <Col span={24}>\r\n                                <div style={{textAlign: 'center'}}>\r\n                                    <BasicButton text='선수 저장' disabled={quarterStatus === 'wait'} onClick={onClickPlayerSave}/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        null\r\n            }\r\n            <Col span={24}>\r\n                <div style={{textAlign: 'center'}}>\r\n                    <BasicButton disabled={!(quarterStatus === 'finish' && teamStatus === 'finish' && playerStatus === 'finish')} text='다음' onClick={onClickNextButton}/>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TeamSettingPage;"],"names":["_ref","type","shape","icon","text","size","disabled","onClick","_jsx","Button","children","items","current","setCurrent","Steps","direction","onChange","value","initialTeamList","setTeamList","teamList","_useState","useState","_toConsumableArray","map","v","key","_useState2","_slicedToArray","targetKeys","setTargetKeys","_useState3","_useState4","selectedKeys","setSelectedKeys","Transfer","dataSource","titles","render","item","team","onSelectChange","sourceSelectedKeys","targetSelectedKeys","concat","nextTargetKeys","filter","includes","min","max","addonAfter","InputNumber","defaultValue","header","whitePlayerList","blackPlayerList","greenPlayerList","data","setData","useEffect","List","renderItem","Item","name","setWhitePlayer","setBlackPlayer","setGreenPlayer","Input","placeholder","prefix","UserOutlined","e","target","allowClear","navigate","useNavigate","teamStatus","setTeamStatus","_useState5","_useState6","quarterStatus","setQuarterStatus","_useState7","_useState8","playerStatus","setPlayerStatus","_useState9","_useState10","setInitialTeamList","_useState11","_useState12","_useState13","_useState14","quarter","setQuarter","_useState15","_useState16","whitePlayer","_useState17","_useState18","blackPlayer","_useState19","_useState20","greenPlayer","_useState21","_useState22","setWhitePlayerList","_useState23","_useState24","setBlackPlayerList","_useState25","_useState26","setGreenPlayerList","players","title","status","TeamOutlined","OrderedListOutlined","onClickSteps","_jsxs","Row","gutter","justify","Col","span","Step","style","textAlign","BasicButton","LeftOutlined","RightOutlined","Transfers","length","Number","offset","SetPlayers","Space","Compact","Name","PlusOutlined","window","localStorage","setItem","JSON","stringify","_objectSpread"],"sourceRoot":""}